{"componentChunkName":"component---src-templates-wiki-post-js","path":"/HOF_Framework/customising-behaviour","result":{"data":{"markdownRemark":{"html":"<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#the-request-pipeline\">The request pipeline</a></p>\n<ul>\n<li><a href=\"#get-request-flow\">GET Request Flow</a></li>\n<li><a href=\"#post-request-flow\">POST Request Flow</a></li>\n<li><a href=\"#sessions\">Sessions</a></li>\n<li><a href=\"#behaviours\">Behaviours</a></li>\n<li><a href=\"#writing-a-behaviour\">Writing a behaviour</a></li>\n<li><a href=\"#configurable-behaviours\">Configurable behaviours</a></li>\n<li><a href=\"#validation-behaviour\">Validation behaviour</a></li>\n<li><a href=\"#completion-behaviour\">Completion behaviour</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<p>You will also see in your configuration that the <code class=\"language-jstext\">/confirm</code> step has an additional <code class=\"language-jstext\">behaviours</code> option. This defines some custom functionality for that step.</p>\n<p>\"Behaviours\" are used to extend the default request pipeline from the <a href=\"https://github.com/ukhomeofficeforms/hof-form-controller\">core form controller</a> with custom functionality for you app.</p>\n<p>Before writing your own behaviours it is helpful to understand the request/response flow, and what the different methods are used for.</p>\n<h2 id=\"the-request-pipeline\" style=\"position:relative;\"><a href=\"#the-request-pipeline\" aria-label=\"the request pipeline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The request pipeline</h2>\n<p>The underlying controller that handles the form GET/POST pipeline consists of a number of stages for form rendering and processing/validation that can be extended to perform advanced custom behaviour for your forms.</p>\n<p>All of the pipeline methods are passed the request and response objects as arguments. Unless specified below, methods are also passed a callback as a third argument, which should be called with an <code class=\"language-jstext\">Error</code> if applicable.</p>\n<h3 id=\"get-request-flow\" style=\"position:relative;\"><a href=\"#get-request-flow\" aria-label=\"get request flow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GET Request Flow</h3>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Step</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>configure</td>\n<td>Override global form configuration with request/session-specific details. Initial controller configuration available on <code class=\"language-jstext\">req.form.options</code>.</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>getValues</td>\n<td>Retrieves any values required for this step. By default, this is a copy of the data stored on the user's session. This method is passed a callback as a third argument, which should be called with an error if required and the values as a second argument. Any values passed to the callback are written to <code class=\"language-jstext\">req.form.values</code>.</td>\n<td>Example: <code class=\"language-jstext\">js getValues(req, res, (err, values) => { if (err) throw err; req.form.values = values; }) </code></td>\n</tr>\n<tr>\n<td>GET</td>\n<td>locals</td>\n<td>Loads any data required for rendering the page template as key-value pairs synchronously.</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>render</td>\n<td>Uses Mustache to render the step HTML to the user. Unlikely to need modification unless returning non-HTML.</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"post-request-flow\" style=\"position:relative;\"><a href=\"#post-request-flow\" aria-label=\"post request flow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>POST Request Flow</h3>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Step</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>POST</td>\n<td>configure</td>\n<td>Override global form configuration with request/session-specific details. Initial controller configuration available on <code class=\"language-jstext\">req.form.options</code>.</td>\n<td>Example: <code class=\"language-jstext\">js configure(req, res) { req.form.options.title = 'Custom Title'; } </code></td>\n</tr>\n<tr>\n<td>POST</td>\n<td>process</td>\n<td>Normalizes the input data from <code class=\"language-jstext\">req.body</code> and writes any data to <code class=\"language-jstext\">req.form.values</code> to be consumed by later steps.</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>validate</td>\n<td>Perform any custom validation required. By default, all the fields are validated according to the rules defined in the field configuration (or custom rules defined in <code class=\"language-jstext\">configure</code>).</td>\n<td>Example: <code class=\"language-jstext\">js validate(req, res) { if (req.form.values.age &lt; 18) return 'Age must be 18 or older'; } </code></td>\n</tr>\n<tr>\n<td>POST</td>\n<td>saveValues</td>\n<td>Saves the processed values from the form to persistent storage for later retrieval. By default, this writes the values from <code class=\"language-jstext\">req.form.values</code> to the user's session.</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>successHandler</td>\n<td>Performs post-success actions on the form. By default, this redirects the user to the subsequent form step.</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"sessions\" style=\"position:relative;\"><a href=\"#sessions\" aria-label=\"sessions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sessions</h3>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Action</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>N/A</td>\n<td>Access</td>\n<td>The user's session can be accessed at any time via <code class=\"language-jstext\">req.sessionModel</code>.</td>\n<td>Example: <code class=\"language-jstext\">js const sessionData = req.sessionModel.get('userData'); </code></td>\n</tr>\n<tr>\n<td>N/A</td>\n<td>Methods</td>\n<td>Methods available: <code class=\"language-jstext\">get</code>, <code class=\"language-jstext\">set</code>, and <code class=\"language-jstext\">unset</code>.</td>\n<td>Example: <code class=\"language-jstext\">js req.sessionModel.set('isLoggedIn', true); </code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"behaviours\" style=\"position:relative;\"><a href=\"#behaviours\" aria-label=\"behaviours permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Behaviours</h3>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Action</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>N/A</td>\n<td>Configuration</td>\n<td>To add a custom behavior to a form step, you can set a <code class=\"language-jstext\">behaviours</code> option on the step configuration (note that this <em>cannot</em> be done dynamically, and must be hard-coded in the step configuration).</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>N/A</td>\n<td>Loading</td>\n<td>Behaviours can either be loaded from external modules (for example <a href=\"https://github.com/UKHomeOfficeForms/hof-behaviour-summary-page\">hof-behaviour-summary-page</a> or <a href=\"https://github.com/UKHomeOfficeForms/hof-behaviour-address-lookup\">hof-behaviour-address-lookup</a>) or from files within your own codebase. The patterns are the same in each case.</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>N/A</td>\n<td>Composition</td>\n<td>The <code class=\"language-jstext\">behaviours</code> option can be set with either a single behavior directly, or as an array of behaviours which are composed upon one another. If multiple behaviours are passed then they are composed onto the base controller from left-to-right, so each behaviour will have methods from the previous behaviours available as <code class=\"language-jstext\">super</code>.</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"writing-a-behaviour\" style=\"position:relative;\"><a href=\"#writing-a-behaviour\" aria-label=\"writing a behaviour permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Writing a behaviour</h3>\n<p>The simplest form of a behaviour is a <a href=\"https://www.npmjs.com/package/mixwith#define-a-mixin\">mixin function</a>, which takes a class as an argument, and extends it with custom methods.</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"29229815097711210000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// my-behaviour.js\nmodule.exports = superclass => class extends superclass {\n  configure(req, res, next) {\n    super.configure(req, res, err => {\n      // do some custom configuration here\n      next(err);\n    });\n  }\n};`, `29229815097711210000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">example-configure-behaviour.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjs line-numbers\"><code class=\"language-jsjs\"><span class=\"token comment\">// my-behaviour.js</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">superclass</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> superclass <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// do some custom configuration here</span>\n      <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>You can then apply this behaviour to a step as follows:</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"872044063023369500\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`module.exports = {\n  steps: {\n    '/my-step': {\n      behaviours: require('./my-behaviour')\n    }\n  }\n};`, `872044063023369500`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">behaviour-in-steps.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjs line-numbers\"><code class=\"language-jsjs\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">steps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'/my-step'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">behaviours</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./my-behaviour'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"configurable-behaviours\" style=\"position:relative;\"><a href=\"#configurable-behaviours\" aria-label=\"configurable behaviours permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configurable behaviours</h3>\n<p>In most cases, we will want custom behaviours to be configurable - for example, the <a href=\"https://github.com/UKHomeOfficeForms/hof-behaviour-emailer\">emailer behaviour</a> - so the same behaviour can be re-used with different options.</p>\n<p>In this case we can define our behaviour as a function which receives configuration options and returns a mixin function.</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"68408440417180020000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// reverse-a-key.js\nmodule.exports = config => superclass => class extends superclass {\n  saveValues(req, res, next) {\n    req.form.values[\\`\\${config.key}-reversed\\`] = reverse(req.form.values[config.key]);\n    super.saveValues(req, res, next);\n  }\n};`, `68408440417180020000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">example-saveValues.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjs line-numbers\"><code class=\"language-jsjs\"><span class=\"token comment\">// reverse-a-key.js</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">config</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">superclass</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> superclass <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">saveValues</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    req<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>config<span class=\"token punctuation\">.</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-reversed</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">[</span>config<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveValues</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>You can then apply this behaviour to a step as follows:</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"57708254392559600000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const reverse = require('./reverse-a-key');\n\nmodule.exports = {\n  steps: {\n    '/my-step': {\n      fields: ['name'],\n      behaviours: reverse({ key: 'name' })\n    }\n  }\n};`, `57708254392559600000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">behaviour-in-step.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjs line-numbers\"><code class=\"language-jsjs\"><span class=\"token keyword\">const</span> reverse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./reverse-a-key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">steps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'/my-step'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">fields</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">behaviours</span><span class=\"token operator\">:</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'name'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"validation-behaviour\" style=\"position:relative;\"><a href=\"#validation-behaviour\" aria-label=\"validation behaviour permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Validation behaviour</h3>\n<p>We can configure custom validations as a behaviour using the <code class=\"language-jstext\">validate</code> method:</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"51713594466959490000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`module.exports = SuperClass => class extends SuperClass {\n  validate(req, res, next) {\n    if (req.form.values.email.toLowerCase() !== req.form.values.emailVerify.toLowerCase()) {\n      return next({\n        emailVerify: new this.ValidationError(\n          'emailVerify',\n          {\n            type: 'notSame'\n          }\n        ),\n        email: new this.ValidationError(\n          'email',\n          {\n            type: 'notSame'\n          }\n        )\n      });\n    } super.validate(req, res, next);\n    return next;\n  }\n};`, `51713594466959490000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">validation-behaviour.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjs line-numbers\"><code class=\"language-jsjs\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">SuperClass</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> SuperClass <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> req<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>emailVerify<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">emailVerify</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">this<span class=\"token punctuation\">.</span>ValidationError</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">'emailVerify'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'notSame'</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">this<span class=\"token punctuation\">.</span>ValidationError</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'notSame'</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> next<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The behaviour is applied to a step:</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"60849363176133300000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`module.exports = {\n  steps: {\n    '/email': {\n      behaviours: [VerifyEmail],\n      fields: ['email', 'emailVerify'],\n    }\n  }\n};`, `60849363176133300000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">behaviour-in-step.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjs line-numbers\"><code class=\"language-jsjs\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">steps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'/email'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">behaviours</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>VerifyEmail<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">fields</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'emailVerify'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The validation message is then set against the configured type in translations/validation.json:</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"5410529043899515000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;email&quot;: {\n  &quot;notSame&quot;: &quot;Your email addresses do not match&quot;\n}`, `5410529043899515000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">validation.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjson line-numbers\"><code class=\"language-jsjson\"><span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"notSame\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Your email addresses do not match\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"completion-behaviour\" style=\"position:relative;\"><a href=\"#completion-behaviour\" aria-label=\"completion behaviour permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Completion behaviour</h3>\n<p>In addition to any custom behaviours, hof ships with a \"complete\" behaviour out of the box. Adding this behaviour to a step means that once it has been successfully submitted the user's session is marked as complete, and they cannot go back to earlier steps, only access the immediately subsequent step.</p>\n<p>This can be set on a step by simply setting the string <code class=\"language-jstext\">'complete'</code> as a behaviour. It would be expected that this would normally run in conjunction with a behaviour that extends <code class=\"language-jstext\">saveValues</code> to submit the user's application.</p>\n<div\n              class=\"gatsby-code-button-container govuk-visually-hidden\"\n              data-toaster-id=\"18991728430004760000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied!\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const submit = require('./my-submission-behaviour');\n\nmodule.exports = {\n  steps: {\n    '/declaration': {\n      behaviours: ['complete', submit],\n      next: '/confirmation'\n    },\n    '/confirmation': {\n      // only this step can be accessed once &quot;declaration&quot; step is submitted\n    }\n  }\n};`, `18991728430004760000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy to clipboard\"\n              >\n                Copy ›<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-code-title\">framework-and-custom-behaviours.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsjs line-numbers\"><code class=\"language-jsjs\"><span class=\"token keyword\">const</span> submit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./my-submission-behaviour'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">steps</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'/declaration'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">behaviours</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> submit<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">next</span><span class=\"token operator\">:</span> <span class=\"token string\">'/confirmation'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">'/confirmation'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// only this step can be accessed once \"declaration\" step is submitted</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"path":null,"title":"Customising Behaviour","tags":null}}},"pageContext":{"title":"Customising Behaviour","slug":"/HOF_Framework/customising-behaviour/","tags":null,"breadcrumb":{"location":"/HOF_Framework/customising-behaviour","crumbs":[{"pathname":"/","crumbLabel":"Home"},{"pathname":"/HOF_Framework","crumbLabel":"HOF_Framework"},{"pathname":"/HOF_Framework/customising-behaviour","crumbLabel":"customising-behaviour"}]}}},"staticQueryHashes":["2744294623","3649515864","3684199878"]}