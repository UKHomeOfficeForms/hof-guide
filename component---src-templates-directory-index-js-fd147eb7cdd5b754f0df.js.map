{"version":3,"file":"component---src-templates-directory-index-js-fd147eb7cdd5b754f0df.js","mappings":"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","sources":["webpack://hof-guide/./src/utils/generate-site-tree.js","webpack://hof-guide/./src/templates/directory-index.js","webpack://hof-guide/./node_modules/lodash/_arrayIncludes.js","webpack://hof-guide/./node_modules/lodash/_arrayIncludesWith.js","webpack://hof-guide/./node_modules/lodash/_baseFindIndex.js","webpack://hof-guide/./node_modules/lodash/_baseIndexOf.js","webpack://hof-guide/./node_modules/lodash/_baseIsNaN.js","webpack://hof-guide/./node_modules/lodash/_baseUniq.js","webpack://hof-guide/./node_modules/lodash/_createSet.js","webpack://hof-guide/./node_modules/lodash/_strictIndexOf.js","webpack://hof-guide/./node_modules/lodash/noop.js","webpack://hof-guide/./node_modules/lodash/uniq.js"],"sourcesContent":["/* eslint-disable no-loop-func */\nimport _ from 'lodash';\nimport { generateDirTree, formatTitle } from './parse-links-to-tree';\n\nclass SiteTree {\n  constructor(pageContext) {\n    this.pageContext = pageContext;\n    this.pageTitle = formatTitle(pageContext.title);\n  }\n\n  generateTreeData(data) {\n    let root = { children: [] }; // create origin\n\n    for (var obj of data) { // loop items in the data\n      obj.type = 'Page'; // add a property to suit your output\n      let tree = root; // start at root every object\n\n      for (var subDir of obj.directoryTree) { // loop over items in subDir\n        let branch = tree.children.find(k => k.title === formatTitle(subDir)); // look for branch\n\n        if (!branch) { // if no branch, create one\n          branch = {\n            title: formatTitle(subDir),\n            type: 'Directory',\n            path: obj.path.substring(0, obj.path.indexOf(subDir)) + subDir,\n            children: []\n          };\n          tree.children.push(branch); // push this into children of current level\n        }\n        tree = branch; // set tree to branch before processing next item in subDir\n      }\n      if (!obj.isDirectory) {\n        obj.title = formatTitle(obj.title);\n        tree.children.push(obj); // add the item to the hierarchy after subDir is exhausted\n      }\n    }\n    return root.children; // return children of the root to suit your output\n  }\n\n  generateSiteTreeFromPage(nodes) {\n    const isSitemap = this.isSitemap();\n    // parse through node paths in response from graphql\n    let relevantUris = nodes\n                        .map(node => node.path)\n                        // filter page paths associated with current page onwards\n                        .filter(path => isSitemap ? path : path.startsWith(this.pageContext.slug))\n                        // generate brearcrumb directory tree array and return props\n                        .map(path => {\n                          let directoryTree = generateDirTree(`${path}/`);\n                          const title = path.split('/').reverse()[0];\n\n                          return {\n                            path,\n                            title,\n                            directoryTree,\n                            isDirectory: false\n                          };\n                        });\n    // generate array of all subdirectories of current page\n    const allSubDirs = _.uniq(relevantUris.map(uri => uri.directoryTree.join('/'))).sort();\n    // establish if end page route is a directory and update obj props if so\n    relevantUris = relevantUris.map(obj => {\n      const isEndDirectory = allSubDirs.filter(dir => {\n        return dir.endsWith(`/${obj.title}`) || dir === obj.title;\n      }).length;\n\n      if (isEndDirectory) {\n        obj.directoryTree.push(obj.title);\n        obj.isDirectory = true;\n      }\n      return obj;\n    });\n    // sort by directory tree array and then by url path\n    relevantUris = _.sortBy(relevantUris, ['directoryTree', 'path']);\n\n    let navTree = this.generateTreeData(relevantUris);\n\n    if (isSitemap) {\n      navTree = navTree.filter(obj => obj.children && obj.children.filter(n => n.path).length);\n    }\n\n    return navTree;\n  }\n\n  isSitemap() {\n    return this.pageContext.slug.endsWith('/sitemap');\n  }\n}\n\n\nexport default SiteTree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SiteTree from '../utils/generate-site-tree';\n\nconst Template = ({ pageContext }) => {\n  const crumbs = pageContext.breadcrumb.crumbs;\n  const siteTree = new SiteTree(pageContext);\n  // use graphql to get all page links from site\n  const { pages: { nodes } } = useStaticQuery(graphql`\n    {\n      pages: allSitePage {\n        nodes {\n          path\n        }\n      }\n    }\n  `);\n\n  function Menu({ items }) {\n    return (\n      <ul>\n        {items.map((item, index) => (\n          <li key={index}>\n            <Link\n              className={(item.type === 'Directory' ? 'nav nav-directory' : 'nav nav-link')}\n              to={item.path}>{item.title}\n            </Link>\n            {item.children && <Menu items={item.children} />}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  // recursively format html based on navigation tree through all nested children\n  return (\n    <Layout crumbs={crumbs} title={siteTree.pageTitle}>\n      <Helmet title={siteTree.pageTitle} />\n      <div>\n        <h1>{siteTree.pageTitle}</h1>\n        <p>{siteTree.isSitemap ?\n          'Below are all directories and pages associated with this guide:' :\n          'The following pages refer to this topic:' }\n        </p>\n        <ul className=\"directory-index\">\n          <Menu items={siteTree.generateSiteTreeFromPage(nodes)} />\n        </ul>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Template;\n\nTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    breadcrumb: PropTypes.shape({\n      crumbs: PropTypes.arrayOf(\n        PropTypes.shape({\n          location: PropTypes.shape(),\n          pathname: PropTypes.string.isRequired,\n        })\n      ).isRequired,\n    })\n  }).isRequired\n};\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n"],"names":["SiteTree","pageContext","this","pageTitle","formatTitle","title","_proto","prototype","generateTreeData","data","root","children","obj","type","tree","subDir","directoryTree","branch","find","k","path","substring","indexOf","push","isDirectory","generateSiteTreeFromPage","nodes","isSitemap","relevantUris","map","node","filter","startsWith","slug","generateDirTree","split","reverse","allSubDirs","_uniq","uri","join","sort","dir","endsWith","length","_sortBy","navTree","n","_ref","crumbs","breadcrumb","siteTree","pages","useStaticQuery","Menu","_ref2","items","React","item","index","key","Link","className","to","Layout","Helmet","baseIndexOf","module","exports","array","value","comparator","predicate","fromIndex","fromRight","baseFindIndex","baseIsNaN","strictIndexOf","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","includes","isCommon","result","seen","set","outer","computed","seenIndex","Set","noop","values","baseUniq"],"sourceRoot":""}